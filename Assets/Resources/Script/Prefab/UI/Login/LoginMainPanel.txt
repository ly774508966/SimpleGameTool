local OpenClosePanel = require 'Script.Base.OpenClosePanel'
local UIManager = require 'Script.Manager.UIManager'
local LoginMainPanel = Class("LoginMainPanel", OpenClosePanel)

function LoginMainPanel:Ctor()
	OpenClosePanel.Ctor(self)

end

function LoginMainPanel:Init()
	if not self.IsInit then
		self.IsInit = true
		UIManager.RegisterPanel(PanelType.LoginMainPanel, self)

		self.window = GameObject.Find("UI Root Login/LoginWindow/Login Root")
		self.beginBtn = GameObject.Find("UI Root Login/LoginWindow/Login Root/Login Panel/CloseTween/PlayGamePanel/GameStartButton"):GetComponent("UIButton")
		self.serverBtn = GameObject.Find("UI Root Login/LoginWindow/Login Root/Login Panel/CloseTween/PlayGamePanel/ServerButton"):GetComponent("UIButton")
		self.switchBtn = GameObject.Find("UI Root Login/LoginWindow/Login Root/Login Panel/CloseTween/PlayGamePanel/SwitchButton"):GetComponent("UIButton")
	
		NGUI.EventDelegate.Add(self.beginBtn.onClick, handler(self,self.OnLoginClick), false)
		NGUI.EventDelegate.Add(self.serverBtn.onClick, handler(self,self.OnServerClick), false)
		NGUI.EventDelegate.Add(self.switchBtn.onClick, handler(self,self.OnSwitchUserClick), false)
	end

	--self.window:SetActive(false)
end

function LoginMainPanel:OnPanelStartOpen()

end

function LoginMainPanel:OnPanelStartClose()

end

function LoginMainPanel:OnLoginClick()
	print("OnLoginClick " .. self.prePanelType)
	self:Close()
	UIManager.OpenPanel(PanelType.CreatePlayerPanel, PanelType.LoginMainPanel)
end

function LoginMainPanel:OnServerClick()
	print("OnServerClick")
	self:Close()
	UIManager.OpenPanel(PanelType.ServerListPanel, PanelType.LoginMainPanel)
end

function LoginMainPanel:OnSwitchUserClick()
	print("OnSwitchUserClick")
end

return LoginMainPanel